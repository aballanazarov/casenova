{
    "openapi": "3.0.0",
    "info": {
        "title": "Casenova API Documentation",
        "description": "Casenova API Documentation",
        "contact": {
            "email": "admin@casenova.uz"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://casenova.lc/api/v1",
            "description": "Api Server"
        }
    ],
    "paths": {
        "/create": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Create new User",
                "description": "Returns User data",
                "operationId": "createUser",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "User authorization",
                "description": "Return User token",
                "operationId": "authUser",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/blog": {
            "get": {
                "tags": [
                    "Blogs"
                ],
                "summary": "Get list of blogs",
                "description": "Returns list of blogs",
                "operationId": "getBlogs",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BlogResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/equipments": {
            "get": {
                "tags": [
                    "Equipments"
                ],
                "summary": "Get list of equipments",
                "description": "Returns list of equipments",
                "operationId": "getEquipments",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/services": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "Get list of services",
                "description": "Returns list of services",
                "operationId": "getServices",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Services"
                ],
                "summary": "Create new service",
                "description": "Returns service data",
                "operationId": "storeServices",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "translation": {
                                        "properties": {
                                            "ru": {
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "format": "string",
                                                        "example": "Name Ru"
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "format": "string",
                                                        "example": "Title Ru"
                                                    }
                                                },
                                                "type": "object",
                                                "format": "query"
                                            },
                                            "uz": {
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "format": "string",
                                                        "example": "Name Uz"
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "format": "string",
                                                        "example": "Title Uz"
                                                    }
                                                },
                                                "type": "object",
                                                "format": "query"
                                            },
                                            "en": {
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "format": "string",
                                                        "example": "Name En"
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "format": "string",
                                                        "example": "Title En"
                                                    }
                                                },
                                                "type": "object",
                                                "format": "query"
                                            }
                                        },
                                        "type": "object",
                                        "format": "query"
                                    }
                                },
                                "type": "object",
                                "collectionFormat": "multi"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/services/{id}": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "Get service information",
                "description": "Returns service data",
                "operationId": "getServiceById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Service id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/subservices": {
            "get": {
                "tags": [
                    "Blogs"
                ],
                "summary": "Get list of subservices",
                "description": "Returns list of subservices",
                "operationId": "getSubservices",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "BaseRecourse": {
                "title": "BaseRecourse",
                "description": "Base Recourse",
                "xml": {
                    "name": "BaseRecourse"
                }
            },
            "BlogResource": {
                "title": "BlogResource",
                "description": "Blog Resource",
                "xml": {
                    "name": "BlogResource"
                }
            },
            "BlogTranslationResource": {
                "title": "BlogTranslationResource",
                "description": "Blog Translation Resource",
                "properties": {
                    "title": {
                        "title": "title",
                        "description": "title",
                        "format": "string"
                    },
                    "content": {
                        "title": "content",
                        "description": "content",
                        "format": "string"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "BlogTranslationResource"
                }
            },
            "BaseModel": {
                "title": "BaseModel",
                "description": "Base Model",
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "Id",
                        "type": "integer",
                        "format": "integer",
                        "readOnly": "true",
                        "nullable": true
                    },
                    "created_at": {
                        "title": "created_at",
                        "description": "Date of Model creation",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true",
                        "nullable": true
                    },
                    "updated_at": {
                        "title": "updated_at",
                        "description": "Date of last updating Model data",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true",
                        "nullable": true
                    },
                    "locale": {
                        "title": "locale",
                        "description": "locale",
                        "type": "string",
                        "format": "string",
                        "readOnly": "true"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "BaseModel"
                }
            },
            "Blog": {
                "title": "Blog",
                "description": "Blog",
                "xml": {
                    "name": "Blog"
                }
            }
        },
        "securitySchemes": {
            "sanctum": {
                "type": "apiKey",
                "description": "Enter token in format (Bearer <token>)",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "tags": [
        {
            "name": "Auth",
            "description": "API Endpoints of Projects"
        },
        {
            "name": "Blogs",
            "description": "API Endpoints of Projects"
        },
        {
            "name": "Equipments",
            "description": "API Endpoints of Projects"
        },
        {
            "name": "Services",
            "description": "API Endpoints of Projects"
        },
        {
            "name": "Subservices",
            "description": "API Endpoints of Projects"
        }
    ]
}